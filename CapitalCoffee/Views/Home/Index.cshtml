@model PagedList.IPagedList<CapitalCoffee.Data.Models.Shop>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Home Page";
}

<div id="container">
    <div id="map">

    </div>

    <div id="shopList">
        <div id="shopListHeader">
            <form method="get" action="@Url.Action("Index")">
                <input type="search" name="searchTerm" autocomplete="off" />
                <input type="submit" value="Search By Name" class="btn btn-info" />
                @Html.ActionLink("Add Shop", "Create", "Shop", null, new { @class = "pull-right btn btn-info" })
            </form>
            @*@Html.ActionLink("Add Shop", "Create", "Shop", null, new { @class="pull-right btn btn-primary"})*@
        </div>
        <div class="pagedList" data-pt-target="#shopList" id="shopPagedList">
            @foreach(var shop in Model)
            {   int output = new int();
                <div id="singleShop">
                <h3>@Html.ActionLink(@shop.Name, "Details", "Shop", new { id = @shop.ShopId }, null)</h3>
                <h6>Average Rating: @shop.AverageRating</h6>
                <h6>@shop.Address1, @shop.Address2 @shop.City, @shop.State @shop.Zip</h6>   
                </div>
            }
        </div>

        <div id="pager">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.MinimalWithItemCountText)
        </div>
    </div>
</div>


<script>
    var locations = [
      //['Bondi Beach', '850 Bay st 04 Toronto, Ont'],
      //['Coogee Beach', '932 Bay Street, Toronto, ON M5S 1B1'],
      //['Cronulla Beach', '61 Town Centre Court, Toronto, ON M1P'],
      //['Manly Beach', '832 Bay Street, Toronto, ON M5S 1B1'],
      //['Maroubra Beach', '606 New Toronto Street, Toronto, ON M8V 2E8']
    ];

    @foreach(var shop in Model)
    {
        @:locations.push(['@shop.Name','@shop.Address1','@shop.City','@shop.State'])
    }
    alert(locations);
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: new google.maps.LatLng(-34.397, 150.644),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var infowindow = new google.maps.InfoWindow();
        var geocoder = new google.maps.Geocoder();

        var marker, i;

        for (i = 0; i < locations.length; i++) {
            geocodeAddress(locations[i]);
        }


        function geocodeAddress(location) {
            geocoder.geocode({ 'address': location[1] }, function (results, status) {
                //alert(status);
                if (status == google.maps.GeocoderStatus.OK) {

                    //alert(results[0].geometry.location);
                    map.setCenter(results[0].geometry.location);
                    createMarker(results[0].geometry.location, location[0] + "<br>" + location[1]);
                }
                else {
                    alert("some problem in geocode" + status);
                }
            });
        }

        function createMarker(latlng, html) {
            var marker = new google.maps.Marker({
                position: latlng,
                map: map
            });

            google.maps.event.addListener(marker, 'mouseover', function () {
                infowindow.setContent(html);
                infowindow.open(map, marker);
            });

            google.maps.event.addListener(marker, 'mouseout', function () {
                infowindow.close();
            });
        }
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnWvX5ojfzQy6HOobhbn8mO5bxJggVl54&callback=initMap"
        type="text/javascript"></script>