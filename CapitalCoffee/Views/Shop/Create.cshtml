@model CapitalCoffee.Models.ShopCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>Shop</h3>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div id="shopLocationSection">
            <h3>Shop Location</h3>
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1)
                    @Html.ValidationMessageFor(model => model.Address1)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address2)
                    @Html.ValidationMessageFor(model => model.Address2)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City)
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State)
                    @Html.ValidationMessageFor(model => model.State)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zip, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zip)
                    @Html.ValidationMessageFor(model => model.Zip)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsLocal, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsLocal)
                    @Html.ValidationMessageFor(model => model.IsLocal)
                </div>
            </div>
        </div>

        <div id="shopUrlSection">
            <h4>Shop Websites and Social Media</h4>
            <div class="form-group">
                @Html.LabelFor(model => model.WebsiteUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WebsiteUrl)
                    @Html.ValidationMessageFor(model => model.WebsiteUrl)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MenuUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MenuUrl)
                    @Html.ValidationMessageFor(model => model.MenuUrl)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacebookUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacebookUrl)
                    @Html.ValidationMessageFor(model => model.FacebookUrl)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TwitterUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TwitterUrl)
                    @Html.ValidationMessageFor(model => model.TwitterUrl)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InstagramUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InstagramUrl)
                    @Html.ValidationMessageFor(model => model.InstagramUrl)
                </div>
            </div>
        </div>

        <div id="shopHoursSection">
            <div class="form-group">
                <div class="col-md-4">Sunday</div>
                @Html.LabelFor(model => model.HoursOfOperation[0].OpenTime, new { @class = "control-label col-md-2 date" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.HoursOfOperation[0].OpenTime)
                    @Html.ValidationMessageFor(model => model.HoursOfOperation[0].OpenTime)
                </div>

                @Html.LabelFor(model => model.HoursOfOperation[0].CloseTime, new { @class = "control-label col-md-2 date" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.HoursOfOperation[0].CloseTime)
                    @Html.ValidationMessageFor(model => model.HoursOfOperation[0].CloseTime)
                </div>
            </div>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $('.date').datetimepicker();

</script>