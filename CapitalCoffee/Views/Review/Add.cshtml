@model CapitalCoffee.Models.AddReviewViewModel
@{
    ViewBag.Title = "Add";
}


<h2>Add</h2>


@using (Html.BeginForm("Add", "Review", null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AddReviewViewModel</h4>
        <hr />

        @if (TempData["notice"] != null)
        {
            @Html.Encode(TempData["notice"])
        }

        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.HiddenFor(model => model.ShopId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ShopId)
                @Html.ValidationMessageFor(model => model.ShopId)
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.UserId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ShopId)
                @Html.ValidationMessageFor(model => model.ShopId)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Rating, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Rating, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Rating)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewText, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ReviewText, new { autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ReviewText)
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.ReviewPicture, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="ReviewPictures" type="file" accept="image/gif, image/jpeg, image/png" multiple/>
                @Html.ValidationMessageFor(model => model.ReviewPicture)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
